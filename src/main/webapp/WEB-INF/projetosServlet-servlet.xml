<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr/spring-dwr-3.0.xsd">
	
		
	<!-- DWR -->
	<dwr:annotation-config/>
	
	<!-- DWR will scan the classpath and search classes containing @RemoteProxy or @RemoteMethod annotations. 
		This will register the beans and Creator proxies for these classes.-->
 	<dwr:annotation-scan base-package="br.com.eits.meusprojetos.model"
 		scanDataTransferObject="true" scanRemoteProxy="false"/>
 		
 	<!-- DWR - This is required if you want to configure any beans not managed by Spring.-->
	<dwr:configuration>
		<dwr:convert type="bean" class="java.lang.StackTraceElement"/>
		<dwr:convert type="exception" class="java.lang.Exception"/>	
		
	</dwr:configuration>
	
	<mvc:annotation-driven/>
	
	<mvc:resources location="/assets/" mapping="/assets/**" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>	
	
	<context:component-scan base-package="br.com.eits.meusprojetos"/>	

	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="json" value="application/json" />
								<entry key="xml" value="application/xml" />
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>		
		
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
							<property name="autodetectAnnotations" value="true" />
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="language"/>
	</mvc:interceptors>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" p:defaultLocale="en"/>
	
	<bean id="propertyPlaceHolderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="messageSource" 
	class="org.springframework.context.support.ResourceBundleMessageSource" 
	p:basename="messages"></bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
	 p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:order="2"/>
	 	
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>	

</beans>
